generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Test {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  title     String
  url       String
  slug      String     @unique
  attempts  Attempt[]
}

model Attempt {
  id           String       @id @default(cuid())
  studentName  String
  studentEmail String
  startedAt    DateTime     @default(now())
  finishedAt   DateTime?
  testId       String
  test         Test         @relation(fields: [testId], references: [id])

  // phase-1
  tabSwitchCount        Int @default(0)
  fullscreenExitCount   Int @default(0)
  multipleFacesCount    Int @default(0)
  phoneDetectionCount   Int @default(0)

  //phase-2
  tabSwitchEvidence     TabSwitchEvidence[]
  fullscreenExitEvidence FullscreenExitEvidence[]
  multipleFacesEvidence MultipleFacesEvidence[]
  phoneDetectionEvidence PhoneDetectionEvidence[]
}

model TabSwitchEvidence {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  attemptId String
  attempt   Attempt  @relation(fields: [attemptId], references: [id])
}

model FullscreenExitEvidence {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  attemptId String
  attempt   Attempt  @relation(fields: [attemptId], references: [id])
}

model MultipleFacesEvidence {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  attemptId String
  attempt   Attempt  @relation(fields: [attemptId], references: [id])
}

model PhoneDetectionEvidence {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  attemptId String
  attempt   Attempt  @relation(fields: [attemptId], references: [id])
}
