generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  name      String
  email     String   @unique
  password  String   // hashed password
  tests     Test[]
}

model Test {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  title     String
  url       String
  slug      String     @unique
  teacherId String
  teacher   Teacher    @relation(fields: [teacherId], references: [id])
  attempts  Attempt[]

  @@index([teacherId])
}

model Student {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  name      String
  email     String
  uid       String     @unique
  attempts  Attempt[]
}

model Attempt {
  id         String     @id @default(cuid())
  startedAt  DateTime   @default(now())
  finishedAt DateTime?
  testId     String
  test       Test       @relation(fields: [testId], references: [id])
  studentId  String
  student    Student    @relation(fields: [studentId], references: [id])

  // Phase 1 — just counters
  tabSwitchCount      Int @default(0)
  fullscreenExitCount Int @default(0)
  multipleFacesCount  Int @default(0)
  phoneDetectionCount Int @default(0)

  // Phase 2 — evidence
  tabSwitchEvidence      TabSwitchEvidence[]
  fullscreenExitEvidence FullscreenExitEvidence[]
  multipleFacesEvidence  MultipleFacesEvidence[]
  phoneDetectionEvidence PhoneDetectionEvidence[]

  @@index([testId])
  @@index([studentId])
}

model TabSwitchEvidence {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  attemptId String
  attempt   Attempt  @relation(fields: [attemptId], references: [id])

  @@index([attemptId])
}

model FullscreenExitEvidence {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  attemptId String
  attempt   Attempt  @relation(fields: [attemptId], references: [id])

  @@index([attemptId])
}

model MultipleFacesEvidence {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  attemptId String
  attempt   Attempt  @relation(fields: [attemptId], references: [id])

  @@index([attemptId])
}

model PhoneDetectionEvidence {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  attemptId String
  attempt   Attempt  @relation(fields: [attemptId], references: [id])

  @@index([attemptId])
}
